// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package tbncommon.actions;

import java.text.SimpleDateFormat;
import java.util.Locale;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * Parse string to datetime by locale
 */
public class ParseDateTimeWithLocale extends CustomJavaAction<java.util.Date>
{
	private java.lang.String date;
	private java.lang.String pattern;
	private java.lang.String language;
	private java.lang.String country;
	private java.util.Date defaultValue;

	public ParseDateTimeWithLocale(IContext context, java.lang.String date, java.lang.String pattern, java.lang.String language, java.lang.String country, java.util.Date defaultValue)
	{
		super(context);
		this.date = date;
		this.pattern = pattern;
		this.language = language;
		this.country = country;
		this.defaultValue = defaultValue;
	}

	@java.lang.Override
	public java.util.Date executeAction() throws Exception
	{
		// BEGIN USER CODE
	    try {
            SimpleDateFormat dateFormat = new SimpleDateFormat(this.pattern, new Locale(language, country));
            return dateFormat.parse(this.date);
        } catch (Exception e) {
            Core.getLogger(this.getClass().getSimpleName()).warn("Unable to format date " + this.date, e);
            return this.defaultValue;
        }
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ParseDateTimeWithLocale";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
