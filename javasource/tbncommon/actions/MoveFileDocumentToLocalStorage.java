// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package tbncommon.actions;

import java.io.File;
import java.io.InputStream;
import org.apache.commons.io.FileUtils;
import org.apache.commons.lang3.StringUtils;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * Download file from S3 to local storage by Mendix structure.
 */
public class MoveFileDocumentToLocalStorage extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __file;
	private system.proxies.FileDocument file;

	public MoveFileDocumentToLocalStorage(IContext context, IMendixObject file)
	{
		super(context);
		this.__file = file;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.file = __file == null ? null : system.proxies.FileDocument.initialize(getContext(), __file);

		// BEGIN USER CODE
        try
        {
            String uuid = __file.getValue(getContext(), "__UUID__");
            InputStream is = Core.getFileDocumentContent(getContext(), file.getMendixObject());
            
            String stPath = StringUtils.substring(uuid, 0, 2);
            String ndPath = StringUtils.substring(uuid, 2, 4);
            String basePath = Core.getConfiguration().getBasePath().getAbsolutePath() + "/data/files/";
            
            // copy input stream to file
            File fis = new File(basePath + uuid);
            FileUtils.copyInputStreamToFile(is, fis);
            
            // move to folder structure of mendix
            File output = new File(basePath + stPath + "/" + ndPath );
            FileUtils.moveFileToDirectory(fis, output, true);
            
            is.close();
            
            return true;
        }
        catch (Exception e)
        {
            throw new com.mendix.systemwideinterfaces.MendixRuntimeException(e);
        }
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "MoveFileDocumentToLocalStorage";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
