// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package tbncommon.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the TBNCommon module
	public static tbncommon.proxies.Metadata dS_Metadata(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("TBNCommon.DS_Metadata").withParams(params).execute(context);
		return result == null ? null : tbncommon.proxies.Metadata.initialize(context, result);
	}
	public static java.lang.String numberString(IContext context, java.lang.Long _pointer, java.lang.String _amountUnit, java.lang.Long _length, java.lang.Long _resultMod)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("pointer", _pointer);
		params.put("AmountUnit", _amountUnit);
		params.put("Length", _length);
		params.put("ResultMod", _resultMod);
		return (java.lang.String) Core.microflowCall("TBNCommon.NumberString").withParams(params).execute(context);
	}
	public static void redirect(IContext context, java.lang.String _location, system.proxies.HttpResponse _httpResponse)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("location", _location);
		params.put("HttpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		Core.microflowCall("TBNCommon.Redirect").withParams(params).execute(context);
	}
	public static java.lang.String translateAmount(IContext context, java.lang.String _amountUnit)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AmountUnit", _amountUnit);
		return (java.lang.String) Core.microflowCall("TBNCommon.TranslateAmount").withParams(params).execute(context);
	}
}
